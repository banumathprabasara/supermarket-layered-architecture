/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pos.layerd.view;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pos.layerd.controller.ItemController;
import pos.layerd.dto.ItemDto;

/**
 *
 * @author banumathprabasara
 */
public class ItemForm extends javax.swing.JPanel {
    
    private ItemController itemController;

    /**
     * Creates new form ItemForm
     */
    public ItemForm() {
        itemController = new ItemController();
        initComponents();
        loadAllItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        bodypanel = new javax.swing.JPanel();
        itemCodeLabel = new javax.swing.JLabel();
        ItemCodeText = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        ItemDescText = new javax.swing.JTextField();
        packSizeLabel = new javax.swing.JLabel();
        ItempackSizeText = new javax.swing.JTextField();
        unitPriceLabel = new javax.swing.JLabel();
        ItemUnitPrizeText = new javax.swing.JTextField();
        qOHLabel = new javax.swing.JLabel();
        ItemQOHText = new javax.swing.JTextField();
        saveItemButton = new javax.swing.JButton();
        updateItemButton = new javax.swing.JButton();
        deleteItemButton = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();

        headerPanel.setBackground(new java.awt.Color(204, 204, 204));

        headerLabel.setBackground(new java.awt.Color(242, 242, 202));
        headerLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        headerLabel.setText("Manage Item");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addComponent(headerLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bodypanel.setBackground(new java.awt.Color(204, 204, 204));

        itemCodeLabel.setText("Item Code");

        descriptionLabel.setText("Description");

        ItemDescText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemDescTextActionPerformed(evt);
            }
        });

        packSizeLabel.setText("Pack Size");

        unitPriceLabel.setText("Unit Price");

        ItemUnitPrizeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemUnitPrizeTextActionPerformed(evt);
            }
        });

        qOHLabel.setText("QOH");

        ItemQOHText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemQOHTextActionPerformed(evt);
            }
        });

        saveItemButton.setText("Save item");
        saveItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItemButtonActionPerformed(evt);
            }
        });

        updateItemButton.setText("Update item");
        updateItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemButtonActionPerformed(evt);
            }
        });

        deleteItemButton.setText("Delete item");
        deleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodypanelLayout = new javax.swing.GroupLayout(bodypanel);
        bodypanel.setLayout(bodypanelLayout);
        bodypanelLayout.setHorizontalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodypanelLayout.createSequentialGroup()
                        .addComponent(itemCodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(ItemCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodypanelLayout.createSequentialGroup()
                        .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriptionLabel)
                            .addComponent(packSizeLabel)
                            .addComponent(unitPriceLabel)
                            .addComponent(qOHLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ItemQOHText, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                            .addComponent(ItemUnitPrizeText)
                            .addComponent(ItemDescText)
                            .addComponent(ItempackSizeText))))
                .addGap(18, 18, 18)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        bodypanelLayout.setVerticalGroup(
            bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCodeLabel)
                    .addComponent(ItemCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveItemButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLabel)
                    .addComponent(ItemDescText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packSizeLabel)
                    .addComponent(ItempackSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateItemButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unitPriceLabel)
                    .addComponent(ItemUnitPrizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qOHLabel)
                    .addComponent(ItemQOHText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteItemButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tablePanel.setBackground(new java.awt.Color(202, 202, 242));

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout basePanelLayout = new javax.swing.GroupLayout(basePanel);
        basePanel.setLayout(basePanelLayout);
        basePanelLayout.setHorizontalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        basePanelLayout.setVerticalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ItemDescTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemDescTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemDescTextActionPerformed

    private void ItemUnitPrizeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemUnitPrizeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemUnitPrizeTextActionPerformed

    private void ItemQOHTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemQOHTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemQOHTextActionPerformed

    private void saveItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItemButtonActionPerformed
        // TODO add your handling code here:
        addItem();
    }//GEN-LAST:event_saveItemButtonActionPerformed

    private void updateItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemButtonActionPerformed
        // TODO add your handling code here:
        updateItem();
    }//GEN-LAST:event_updateItemButtonActionPerformed

    private void deleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemButtonActionPerformed
        // TODO add your handling code here:
        deleteItem();
    }//GEN-LAST:event_deleteItemButtonActionPerformed

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
        // TODO add your handling code here:
        searchItem();
    }//GEN-LAST:event_itemTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ItemCodeText;
    private javax.swing.JTextField ItemDescText;
    private javax.swing.JTextField ItemQOHText;
    private javax.swing.JTextField ItemUnitPrizeText;
    private javax.swing.JTextField ItempackSizeText;
    private javax.swing.JPanel basePanel;
    private javax.swing.JPanel bodypanel;
    private javax.swing.JButton deleteItemButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel itemCodeLabel;
    private javax.swing.JTable itemTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel packSizeLabel;
    private javax.swing.JLabel qOHLabel;
    private javax.swing.JButton saveItemButton;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel unitPriceLabel;
    private javax.swing.JButton updateItemButton;
    // End of variables declaration//GEN-END:variables

    private void addItem() {
        ItemDto itemDto = new ItemDto(ItemCodeText.getText(),
                    ItemDescText.getText(),
                    ItempackSizeText.getText(),
                    Double.parseDouble(ItemUnitPrizeText.getText()),
                    Integer.parseInt(ItemQOHText.getText()));
            
        try {
            String reps =itemController.addItem(itemDto);
            JOptionPane.showMessageDialog(this, reps);
            clear();
            loadAllItem();
        } catch (Exception ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    

    private void updateItem() {
        try {
            ItemDto itemDto = new ItemDto(ItemCodeText.getText(),
                    ItemDescText.getText(),
                    ItempackSizeText.getText(),
                    Double.parseDouble(ItemUnitPrizeText.getText()),
                    Integer.parseInt(ItemQOHText.getText()));
            
            String reps = itemController.updateItem(itemDto);
            JOptionPane.showMessageDialog(this, reps);
            clear();
            loadAllItem();
        } catch (Exception ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }

    private void deleteItem() {
        try {
            String itemCode = ItemCodeText.getText();
            String reps = itemController.deleteItem(itemCode);
            JOptionPane.showMessageDialog(this, reps);
            clear();
            loadAllItem();
        } catch (Exception ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void searchItem() {
        try {
            String itemCode= itemTable.getValueAt(itemTable.getSelectedRow(), 0).toString();
            ItemDto itemDto=itemController.getItem(itemCode);
            
            if(itemDto !=null){
                ItemCodeText.setText(itemDto.getItemCode());
                ItemDescText.setText(itemDto.getDescription());
                ItempackSizeText.setText(itemDto.getPackSize());
                ItemUnitPrizeText.setText(Double.toString(itemDto.getUnitPrize()));
                ItemQOHText.setText(Integer.toString(itemDto.getQoh()));
            }else{
                JOptionPane.showMessageDialog(this,"Item not found");
            }
        } catch (Exception ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }

    private void loadAllItem() {
        try {
            String [] collumns = {"Code","Description","Pack size","Unit Price","Quantity On Hand"};
            
            DefaultTableModel dtm = new DefaultTableModel(collumns,0){
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
                
            };
            
            itemTable.setModel(dtm);
            
            ArrayList<ItemDto> itemDtos = itemController.getAllItem();
            for(ItemDto item : itemDtos){
                Object[] row = {item.getItemCode(),item.getDescription(),item.getPackSize(),item.getUnitPrize(),item.getQoh()};
                dtm.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(ItemForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void clear() {
        ItemCodeText.setText("");
        ItemDescText.setText("");
        ItempackSizeText.setText("");
        ItemUnitPrizeText.setText("");
        ItemQOHText.setText("");
        
    }
}
